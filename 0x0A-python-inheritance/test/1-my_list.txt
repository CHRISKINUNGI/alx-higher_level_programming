This module tests an inherited sorted function ``print_sorted``

Usage

``print_sorted()
Args: list of integers to be sorted``

::
	>>> MyList = __import__('1-my_list').MyList
	>>> my_list = MyList()
	>>> type(my_list)
	<class '1-my_list.MyList'>

::
	>>> my_list
	[]

::
	>>> a = [3, 5, 2]
	>>> my_list = MyList(a)
	>>> my_list.print_sorted()
	[2, 3, 5]
	>>>

::
	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.print_sorted()
	[1]

::
	>>> b = [-5, -6, 0, 9]
	>>> my_list = MyList(b)
	>>> my_list.print_sorted()
	[-6, -5, 0, 9]
	>>>

::
	>>> b = []
	>>> my_list = MyList(b)
	>>> my_list.print_sorted()
	[]
	>>>

::
	>>> my_list = MyList()
	>>> b = [5, 6, 7]
	>>> my_list = MyList(b)
	>>> my_list.print_sorted()
	[5, 6, 7]
	>>> b == my_list
	True

::
	>>> my_list = MyList([3, 1, 2])
	>>> new_list = my_list.print_sorted()
	[1, 2, 3]
	>>> isinstance(new_list, list)
	False
	>>>
